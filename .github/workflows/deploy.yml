name: 自動部署 PTT股票爬蟲系統

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # 後端部署
  deploy-backend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
    - name: 檢出代碼
      uses: actions/checkout@v4
      
    - name: 設置Python環境
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 安裝依賴
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8  # 安裝代碼檢查工具
        
    - name: 代碼檢查
      run: |
        python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
        python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics || true
        
    - name: 構建Docker鏡像
      run: |
        docker build -t ptt-crawler-backend:latest .
        
    - name: 部署到VPS
      if: github.ref == 'refs/heads/main' && secrets.VPS_HOST != ''
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          cd /home/chaser/chaser
          git pull origin main
          chmod +x deploy.sh
          ./deploy.sh backend --clean
          
  # 前端部署
  deploy-frontend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
    - name: 檢出代碼
      uses: actions/checkout@v4
      
    - name: 設置Node.js環境
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: 安裝前端依賴
      run: |
        cd frontend
        npm ci
        
    - name: 前端代碼檢查
      run: |
        cd frontend
        npm run lint
        
    - name: 構建前端
      run: |
        cd frontend
        npm run build
        
    - name: 部署前端到VPS
      if: github.ref == 'refs/heads/main' && secrets.VPS_HOST != ''
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          cd /home/chaser/chaser/frontend
          git pull origin main
          chmod +x deploy.sh
          ./deploy.sh prod
          
  # 全棧部署
  deploy-all:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [deploy-backend, deploy-frontend]
    
    steps:
    - name: 檢出代碼
      uses: actions/checkout@v4
      
    - name: 最終部署檢查
      if: secrets.VPS_HOST != ''
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          cd /home/chaser/chaser
          docker-compose ps
          curl -f http://localhost:8000/ || exit 1
          curl -f http://localhost:3000/ || exit 1
          echo "所有服務運行正常！"
