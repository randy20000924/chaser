name: 本地測試

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # 後端測試
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: 檢出代碼
      uses: actions/checkout@v4
      
    - name: 設置Python環境
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 安裝依賴
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pytest
        
    - name: 代碼檢查
      run: |
        python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
        python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics || true
        
    - name: 構建Docker鏡像
      run: |
        docker build -t ptt-crawler-backend:test .
        
    - name: 測試Docker鏡像
      run: |
        docker run --rm ptt-crawler-backend:test python -c "import main; print('後端模組導入成功')"
        
  # 前端測試
  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: 檢出代碼
      uses: actions/checkout@v4
      
    - name: 設置Node.js環境
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: 安裝前端依賴
      run: |
        cd frontend
        npm ci
        
    - name: 前端代碼檢查
      run: |
        cd frontend
        npm run lint || true
        
    - name: 構建前端
      run: |
        cd frontend
        npm run build
        
    - name: 測試前端構建
      run: |
        cd frontend
        npm run start &
        sleep 10
        curl -f http://localhost:3000/ || exit 1
        pkill -f "next start"
